{"version":3,"sources":["components/Height.js","components/Weight.js","components/UserResults.js","components/BmiNumber.js","components/BmiButton.js","components/Footer.js","components/Content.js","App.js","index.js"],"names":["Height","this","props","heightFeet","heightInches","handleBmi","Form","Label","htmlFor","tabIndex","Control","id","type","name","placeholder","autoComplete","value","onChange","aria-label","Component","Weight","weightPounds","UserResults","getBmi","className","BmiNumber","BmiButton","handleResults","disabled","Button","variant","color","onClick","size","Footer","Content","App","e","preventDefault","target","setState","state","addAllHeight","Number","totalBMI","Math","pow","toFixed","results","handleKeyDown","keyCode","bind","Navbar","Container","Brand","href","style","fontWeight","fontSize","Toggle","Collapse","Text","onSubmit","onKeyDown","Group","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.04f3d2a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Height extends Component {\r\n  render() {\r\n    const { heightFeet, heightInches, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Form.Label\r\n          htmlFor=\"height-feet\"\r\n          tabIndex=\"0\">\r\n            Height\r\n        </Form.Label>\r\n        { /*height in feet*/ }\r\n        <Form.Control\r\n          id=\"height-feet\"\r\n          type=\"number\"\r\n          name=\"heightFeet\"\r\n          placeholder=\"Feet\"\r\n          autoComplete=\"off\"\r\n          value={heightFeet}\r\n          onChange={handleBmi}\r\n          aria-label=\"feet\"\r\n        />\r\n        { /*height in inches*/ }\r\n        <Form.Control\r\n          id=\"height-inches\"\r\n          type=\"number\"\r\n          name=\"heightInches\"\r\n          placeholder=\"Inches\"\r\n          autoComplete=\"off\"\r\n          value={heightInches}\r\n          onChange={handleBmi}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Height;","import React, { Component } from 'react';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\nclass Weight extends Component {\r\n  render() {\r\n    const { weightPounds, handleBmi } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        { /*weight in pounds*/ }\r\n        <Form.Label\r\n          htmlFor=\"weight-lbs\"\r\n          tabIndex=\"0\">\r\n            Weight\r\n        </Form.Label>\r\n        <Form.Control\r\n          id=\"weight-lbs\"\r\n          type=\"number\"\r\n          name=\"weightPounds\"\r\n          placeholder=\"Kilogram\"\r\n          autoComplete=\"off\"\r\n          value={weightPounds}\r\n          onChange={handleBmi}\r\n          aria-label=\"pounds\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weight;","import React, { Component } from 'react';\r\n\r\nclass UserResults extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    function showStrBmi() {\r\n      if (getBmi === \"\") {\r\n        return 'Calculate Your Body Mass Index';\r\n      } else if (getBmi < 18.5) {\r\n        return 'You are underweight.';\r\n      } else if (getBmi >= 18.5 && getBmi <= 24.9) {\r\n        return 'You are healthy!';\r\n      } else if (getBmi >= 25 && getBmi <= 29.9) {\r\n        return 'You are overweight.';\r\n      } else if (getBmi >= 30) {\r\n       return 'You are obese.';\r\n      }\r\n    }\r\n\r\n    function info() {\r\n      if (getBmi === \"\") {\r\n        return '';\r\n      } else if (getBmi < 18.5) {\r\n        return 'Your weight is less than it ideally should be. See your doctor or health professional and discuss whether you may need to aim at gaining weight. They can help you think of small, practical changes you feel comfortable with to achieve a healthy weight.';\r\n      } else if (getBmi >= 18.5 && getBmi <= 24.9) {\r\n        return 'Your BMI is currently within what is considered a healthy weight range. Being a healthy weight has important benefits as it can help reduce your risk of heart disease, diabetes and a range of other conditions.';\r\n      } else if (getBmi >= 25 && getBmi <= 29.9) {\r\n        return 'Your weight appears to be a bit above the ideal range. You might like to talk to your doctor about whether you need to set yourself a new target for a healthy weight. If you are at all concerned or have any health problems, check with your doctor before you start any new exercise programs or eating plans.';\r\n      } else if (getBmi >= 30) {\r\n       return 'You currently weigh more than is ideal. This puts your health at risk and is of increasing concern, particularly as you get older. Talk to your doctor about your BMI and discuss an appropriate and healthy weight for you.';\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"bmi-str-box\" tabIndex=\"0\">\r\n         <p className=\"bmi-str\">\r\n           { showStrBmi() }\r\n         </p>\r\n         <p className=\"res\">\r\n           { info() }\r\n         </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserResults;","import React, { Component } from 'react';\r\n\r\nclass BmiNumber extends Component {\r\n  render() {\r\n    const { getBmi } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"bmi-number-box\"\r\n        tabIndex=\"0\"\r\n        aria-label=\"bmi number\">\r\n          <div\r\n            className=\"bmi-number\"\r\n            tabIndex=\"0\">\r\n              { getBmi }\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiNumber;","import React, { Component } from 'react';\r\nimport {\r\n  Button\r\n} from 'react-bootstrap';\r\n\r\nclass BmiButton extends Component {\r\n  handleResults = () => {\r\n    this.props.handleResults();\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds } = this.props;\r\n    const disabled = (!heightFeet || !heightInches || !weightPounds ? true : false);\r\n\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={this.handleResults}\r\n        className=\"results-btn\"\r\n        disabled={disabled}\r\n        size=\"lg\">\r\n          <span\r\n            className=\"results-text\"\r\n            tabIndex=\"0\">\r\n              Calculate\r\n          </span>\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BmiButton;","// import React from 'react';\r\n// import { faker } from '@faker-js/faker';\r\n\r\n// const randomName = faker.name.findName();\r\n\r\n// const Footer = () => {\r\n  \r\n//   return (\r\n//     <div>\r\n//       <footer className=\"author-ftr\">\r\n//         <p\r\n//           className=\"author\"\r\n//           tabIndex=\"0\">\r\n//             <p>@{randomName}</p>\r\n//         </p>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Footer;\r\n\r\nimport React from 'react';\r\n\r\n\r\nconst Footer = () => {\r\n  \r\n  return (\r\n    <div>\r\n      <footer className=\"author-ftr\">\r\n        <p\r\n          className=\"author\"\r\n          tabIndex=\"0\">\r\n            <p>2022 © BMI Calculator</p>\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nfunction Content() {\r\n  return (\r\n    <div>\r\n\r\n        <div>\r\n          <h1 className='header' >What is BMI ?</h1>\r\n          <div className='content'>\r\n              <h3 className='a'>Body mass index (BMI) is a person’s weight in kilograms divided by the square of height in meters. BMI is an inexpensive and easy screening method for weight category—underweight, healthy weight, overweight, and obesity.</h3>\r\n              <br></br>\r\n              <h3 className='b'>BMI does not measure body fat directly, but BMI is moderately correlated with more direct measures of body fat 1,2,3. Furthermore, BMI appears to be as strongly correlated with various metabolic and disease outcome as are these more direct measures of body fatness 4,5,6,7,8,9.</h3>\r\n              <br></br>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <h1 className='header' >Why is this important?</h1>\r\n          <div className='content'>\r\n              <h3 className='a'>Being a healthy weight means not being under or overweight. A BMI of 20-25 is considered healthy for most adults. However, BMI can be an inaccurate measure of healthy weight for pregnant women, children, older people, athletes or very muscular people. It may also need to be adjusted for some ethnic groups, including people of Asian, Aboriginal or Torres Strait Islander descent.</h3>\r\n              <br></br>\r\n              <h3 className='b'>Being underweight may be associated with lack of some vitamins and minerals that can affect important body functions, such as your immune response to infection and fertility or it can lead to a multitude of health issues from heart disease to bone problems. </h3>\r\n              <br></br>\r\n              <h3 className='a'>Being overweight or obese can lead to a multitude of health issues from heart disease, bone and joint problems as well as increase your risk of some cancers, sleep apnoea and type 2 diabetes.</h3>\r\n              <br></br>\r\n              <h3 className='b'>Putting on weight and trying to lose weight can be hard. Don’t be disheartened or de-motivated if progress is slow. It’s important to decide on small, practical changes that you feel comfortable with and that you’ll be able to stick to. It's helpful to get support from family or friends when you’re trying to change your weight.</h3>\r\n          </div>\r\n        </div>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content","import React, { Component } from 'react';\r\nimport { Container, Navbar } from 'react-bootstrap';\r\nimport Height from './components/Height';\r\nimport Weight from './components/Weight';\r\nimport UserResults from './components/UserResults';\r\nimport BmiNumber from './components/BmiNumber';\r\nimport BmiButton from './components/BmiButton';\r\nimport Footer from './components/Footer';\r\nimport Content from './components/Content';\r\nimport {\r\n  Form\r\n} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      heightFeet: \"\",\r\n      heightInches: \"\",\r\n      weightPounds: \"\",\r\n      results: \"\"\r\n    }\r\n    this.handleBmi = this.handleBmi.bind(this);\r\n    this.handleResults = this.handleResults.bind(this);\r\n  }\r\n\r\n  handleBmi = e => {\r\n    e.preventDefault();\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleResults = e => {\r\n    const { heightFeet, heightInches, weightPounds } = this.state;\r\n    const numHeightFeet = Number(heightFeet);\r\n    const numHeightInches = Number(heightInches);\r\n    const numWeightPounds = Number(weightPounds);\r\n    const addAllHeight = ((numHeightFeet * 12) + numHeightInches);\r\n    //total height in meters\r\n    const totalHeight = Math.pow((addAllHeight) * 0.0254, 2);\r\n    //total weight in kg\r\n    const totalWeight = (numWeightPounds);\r\n    //total bmi\r\n    const totalBMI = (totalWeight/totalHeight).toFixed(1);\r\n    this.setState({\r\n      results: totalBMI\r\n    });\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.handleResults();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { heightFeet, heightInches, weightPounds, results } = this.state;\r\n\r\n    return (\r\n      \r\n      <div>\r\n        \r\n      <Navbar className='nav'>\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\"><span style={{fontWeight: \"bolder\", fontSize: \"25px\"}}>BMI</span><span style={{fontWeight: \"normal\", fontSize: \"18px\"}}> Calculator</span></Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\" >\r\n            <Navbar.Text>\r\n              {/* Signed in as: <a href=\"#login\">Mark Otto</a> */}\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n        <p\r\n          className=\"bmi-title\"\r\n          tabIndex=\"0\"\r\n          aria-label=\"title\">\r\n            \r\n        </p>\r\n        <div className=\"bmi-box\">\r\n          <UserResults getBmi={results} />\r\n          <BmiNumber getBmi ={results} />\r\n          <Form\r\n            onSubmit={this.handleBmi}\r\n            onKeyDown={this.handleKeyDown}\r\n            tabIndex=\"0\"\r\n            aria-label=\"form\">\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*height in feet and inches*/ }\r\n                <Height\r\n                  heightFeet={heightFeet}\r\n                  heightInches={heightInches}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"bmi-label\">\r\n                { /*weight in pounds*/ }\r\n                <Weight\r\n                  weightPounds={weightPounds}\r\n                  handleBmi={this.handleBmi}\r\n                />\r\n              </Form.Group>\r\n              <BmiButton\r\n                heightFeet={heightFeet}\r\n                heightInches={heightInches}\r\n                weightPounds={weightPounds}\r\n                handleResults={this.handleResults}\r\n              />\r\n          </Form>\r\n        </div>\r\n        \r\n        <Content/>\r\n        <Footer />\r\n        \r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/index.css';\r\nimport './css/responsive.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}